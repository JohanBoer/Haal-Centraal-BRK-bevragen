openapi: 3.0.0
info:
  title: Zoek Kadaster Personen API
  description: "API voor het zoeken van Kadaster Natuurlijk Personen met free query\
    \ op geslachtsnaam (minimaal 2 karakters, exact match) en geboortedatum (optioneel,\
    \ format: dd-MM-yyyy)  \nof  \nzoeken van Kadaster- of Ingeschreven Niet Natuurlijk\
    \ Personen met free query op statutaire naam (minimaal 2 karakters, exact match)\
    \ en statutaire zetel (optioneel)\n"
  license:
    name: European Union Public License, version 1.2 (EUPL-1.2)
    url: https://eupl.eu/1.2/nl/
  version: 1.0.0
servers:
- url: /
paths:
  /kadasterpersonen:
    get:
      tags:
      - kadasterpersonen
      description: Zoeken naar Kadaster personen op basis van free query.   Resultaat
        wordt gesorteerd op geslachtsnaam/statutairenaam, voorvoegsel, voornamen,
        geboortedatum
      operationId: GetKadasterpersonen
      parameters:
      - name: q
        in: query
        description: "free query op geslachtsnaam (minimaal 2 karakters, exact match)\
          \ en geboortedatum (optioneel, format: dd-MM-yyyy)  \nof  \nfree query op\
          \ statutaire naam (minimaal 2 karakters, exact match) en statutaire zetel\
          \ (optioneel)\n"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: rechtsvormcode
        in: query
        description: |
          code van een rechtsvorm, bepaald uit de rechtsvorm waardelijst
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: zoektype
        in: query
        description: "np: zoeken naar KadasterNatuurlijkPersonen  \nnnp: zoeken naar\
          \ KadasterNietNatuurlijkPersonen en IngeschrevenNietNatuurlijkPersonen\n\
          \nAls er geen type wordt opgegeven, wordt er naar zowel KadasterNatuurlijkPersonen,\
          \ KadasterNietNatuurlijkPersonen en IngeschrevenNietNatuurlijkPersonen gezocht\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - np
          - nnp
      responses:
        "200":
          description: Zoekactie geslaagd
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
            warning:
              $ref: '#/components/headers/warning'
            X-Rate-Limit-Limit:
              $ref: '#/components/headers/X_Rate_Limit_Limit'
            X-Rate-Limit-Remaining:
              $ref: '#/components/headers/X_Rate_Limit_Remaining'
            X-Rate-Limit-Reset:
              $ref: '#/components/headers/X_Rate_Limit_Reset'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/KadasterPersoonHalCollectie'
        "400":
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BadRequestFoutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.1
                  400 Bad Request
                title: Ten minste één parameter moet worden opgegeven.
                status: 400
                detail: The request could not be understood by the server due to malformed
                  syntax. The client SHOULD NOT repeat the request without modification.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: paramsRequired
                invalid-params:
                - type: https://www.vng.nl/realisatie/api/validaties/integer
                  name: verblijfplaats__huisnummer
                  code: integer
                  reason: Waarde is geen geldige integer.
        "401":
          description: Unauthorized
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.2
                  401 Unauthorized
                title: Niet correct geauthenticeerd.
                status: 401
                detail: The request requires user authentication. The response MUST
                  include a WWW-Authenticate header field (section 14.47) containing
                  a challenge applicable to the requested resource.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: authentication
        "403":
          description: Forbidden
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.4
                  403 Forbidden
                title: U bent niet geautoriseerd voor deze operatie.
                status: 403
                detail: The server understood the request, but is refusing to fulfill
                  it.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: autorisation
        "404":
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.5
                  404 Not Found
                title: Opgevraagde resource bestaat niet.
                status: 404
                detail: The server has not found anything matching the Request-URI.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notFound
        "406":
          description: Not Acceptable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.7
                  406 Not Acceptable
                title: Gevraagde contenttype wordt niet ondersteund.
                status: 406
                detail: The resource identified by the request is only capable of
                  generating response entities which have content characteristics
                  not acceptable according to thr accept headers sent in the request
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAcceptable
        "409":
          description: Conflict
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.10
                  409 Conflict
                title: Conflict
                status: 409
                detail: The request could not be completed due to a conflict with
                  the current state of the resource
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: conflict
        "410":
          description: Gone
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.11
                  410 Gone
                title: Gone
                status: 410
                detail: The request could not be completed due to a conflict with
                  the current state of the resource
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: gone
        "415":
          description: Unsupported Media Type
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.16
                  415 Unsupported Media Type
                title: Unsupported Media Type
                status: 415
                detail: The server is refusing the request because the entity of the
                  request is in a format not supported by the requested resource for
                  the requested method.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: unsupported
        "429":
          description: Too Many Requests
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
                title: Too many request
                status: 429
                detail: The user has sent too many requests in a given amount of time
                  (rate limiting).
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: tooManyRequests
        "500":
          description: Internal Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.5.1
                  500 Internal server error
                title: Interne server fout.
                status: 500
                detail: The server encountered an unexpected condition which prevented
                  it from fulfilling the request.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: serverError
        "503":
          description: Service Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api_version'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Foutbericht'
              example:
                type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.5.4
                  503 Service Unavailable
                title: Bronservice {bron} is tijdelijk niet beschikbaar.
                status: 503
                detail: The service is currently unable to handle the request due
                  to a temporary overloading or maintenance of the server.
                instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
                code: notAvailable
components:
  schemas:
    KadasterPersoonHalCollectie:
      type: object
      properties:
        _link:
          $ref: '#/components/schemas/HalCollectionLinks'
        kadasterPersonen:
          type: array
          items:
            $ref: '#/components/schemas/KadasterPersoonHal'
    KadasterPersoonHal:
      properties:
        _link:
          $ref: '#/components/schemas/KadasterPersoon_links'
      description: |
        abstract base class voor Kadaster personen met HAL links t.b.v. toepassen van polymorphisme.
      discriminator:
        propertyName: kadasterPersoonType
      allOf:
      - $ref: '#/components/schemas/KadasterPersoon'
    KadasterPersoon_links:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
    KadasterNatuurlijkPersoonHal:
      allOf:
      - $ref: '#/components/schemas/KadasterNatuurlijkPersoon'
      - $ref: '#/components/schemas/KadasterPersoon_links'
    KadasterNietNatuurlijkPersoonHal:
      allOf:
      - $ref: '#/components/schemas/KadasterNietNatuurlijkPersoon'
      - $ref: '#/components/schemas/KadasterPersoon_links'
    IngeschrevenNietNatuurlijkPersoonHal:
      allOf:
      - $ref: '#/components/schemas/IngeschrevenNietNatuurlijkPersoon'
      - $ref: '#/components/schemas/KadasterPersoon_links'
    KadasterPersoon:
      discriminator:
        propertyName: kadasterPersoonType
      oneOf:
      - $ref: '#/components/schemas/KadasterNatuurlijkPersoonHal'
      - $ref: '#/components/schemas/KadasterNietNatuurlijkPersoonHal'
      - $ref: '#/components/schemas/IngeschrevenNietNatuurlijkPersoonHal'
    AbstractKadasterPersoon:
      type: object
      properties:
        identificatie:
          type: string
      description: |
        abstract base class voor Kadaster personen t.b.v. toepassen van polymorphisme.
    KadasterNatuurlijkPersoon:
      properties:
        voornamen:
          type: string
        voorvoegselGeslachtsnaam:
          type: string
        geslachtsnaam:
          type: string
        geboorte:
          $ref: '#/components/schemas/Geboorte'
      allOf:
      - $ref: '#/components/schemas/AbstractKadasterPersoon'
    IngeschrevenNietNatuurlijkPersoon:
      properties:
        kvknummer:
          type: string
        rsin:
          type: string
      allOf:
      - $ref: '#/components/schemas/KadasterNietNatuurlijkPersoon'
    KadasterNietNatuurlijkPersoon:
      properties:
        statutaireNaam:
          type: string
        vestiging:
          type: string
      allOf:
      - $ref: '#/components/schemas/AbstractKadasterPersoon'
    Geboorte:
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/Datum_onvolledig'
        land:
          $ref: '#/components/schemas/Waardelijst'
        plaats:
          $ref: '#/components/schemas/Waardelijst'
      description: |
        Gegevens over de geboorte van respectievelijk de persoon, de ouder,
        de echtgenoot/geregistreerd partner, de eerdere echtgenoot/geregistreerd
        partner of het kind.
        * **datum** : Datum waarop de persoon is geboren.
        * **land** : Land waar de persoon is geboren.
        * **plaats** : De plaats waar een persoon is geboren. Voor een plaats buiten Nederland is gemeentecode=1999
        (RNI) en gemeentenaam de buitenlandse plaatsnaam of aanduiding.
    Waardelijst:
      type: object
      properties:
        code:
          title: code
          type: string
        omschrijving:
          title: omschrijving
          type: string
      description: Generieke tabel met waarden om een code en omschrijving op te nemen.
    BadRequestFoutbericht:
      allOf:
      - $ref: '#/components/schemas/Foutbericht'
      - type: object
        properties:
          invalidParams:
            type: array
            description: Foutmelding per fout in een parameter. Alle gevonden fouten
              worden één keer teruggemeld.
            items:
              $ref: '#/components/schemas/InvalidParams'
    Foutbericht:
      type: object
      properties:
        type:
          type: string
          description: Link naar meer informatie over deze fout
          format: uri
        title:
          type: string
          description: Beschrijving van de fout
        status:
          type: integer
          description: Http status code
        detail:
          type: string
          description: Details over de fout
        instance:
          type: string
          description: Uri van de aanroep die de fout heeft veroorzaakt
          format: uri
        code:
          minLength: 1
          type: string
          description: Systeemcode die het type fout aangeeft
      description: Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807).
    InvalidParams:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: https://www.vng.nl/realisatie/api/{major-versie}/validaties/integer
        name:
          type: string
          description: Naam van de parameter
          example: verblijfplaats__huisnummer
        code:
          minLength: 1
          type: string
          description: Systeemcode die het type fout aangeeft
          example: integer
        reason:
          type: string
          description: Beschrijving van de fout op de parameterwaarde
          example: Waarde is geen geldige integer.
      description: Details over fouten in opgegeven parameters
    HalCollectionLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
    HalLink:
      required:
      - href
      type: object
      properties:
        href:
          $ref: '#/components/schemas/Href'
        templated:
          type: boolean
        title:
          type: string
          description: Voor mens leesbaar label bij de link
      description: De Link Object zoals gespecificeerd in https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5
    Href:
      type: string
      format: uri
      example: datapunt.voorbeeldgemeente.nl/api/{major-versie}/resourcename/{resource-identificatie}
    Datum_onvolledig:
      type: object
      properties:
        dag:
          title: dag
          maximum: 31
          minimum: 1
          type: integer
          description: De dag. Als de dag van de datum bekend is wordt deze hier ingevuld.
            Ook als de volledige datum bekend is.
          example: 3
        datum:
          title: datum
          type: string
          description: De volledige datum die in de `date` definitie past. Dit element
            wordt alleen gevuld als de volledige datum bekend is.
          format: date
          example: 1989-05-03
        jaar:
          title: jaar
          maximum: 9999
          type: integer
          description: Het jaar van de datum. Als het jaar bekend is wordt dit element
            gevuld, ook als de volledige datum bekend is.
          example: 1989
        maand:
          title: maand
          maximum: 12
          minimum: 1
          type: integer
          description: De maand. Als de maand van een datum bekend is wordt deze hier
            ingevuld. Ook als de volledige datum is ingevuld.
          example: 5
      description: Gegevens over de datums die mogelijk niet volledig zijn, maar waarvan
        de bekende gedeeltes wel moeten kunnen worden uitgewisseld. Als de volledige
        datum bekend is worden alle elementen gevuld.
  headers:
    api_version:
      schema:
        type: string
        description: Geeft een specifieke API-versie aan in de context van een specifieke
          aanroep.
        example: 1.0.0
    warning:
      schema:
        type: string
        description: zie RFC 7234. In het geval een major versie wordt uitgefaseerd,
          gebruiken we warn-code 299 ("Miscellaneous Persistent Warning") en het API
          end-point (inclusief versienummer) als de warn-agent van de warning, gevolgd
          door de warn-text met de human-readable waarschuwing
        example: '299 https://service.../api/.../v1 "Deze versie van de API is verouderd
          en zal uit dienst worden genomen op 2018-02-01. Raadpleeg voor meer informatie
          hier de documentatie: https://omgevingswet.../api/.../v1".'
    X_Rate_Limit_Limit:
      schema:
        type: integer
    X_Rate_Limit_Remaining:
      schema:
        type: integer
    X_Rate_Limit_Reset:
      schema:
        type: integer
