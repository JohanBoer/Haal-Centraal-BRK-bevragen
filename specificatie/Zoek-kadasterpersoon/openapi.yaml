openapi: 3.0.0
info:
  title: Zoek Kadaster Personen API
  description: |
    API voor het zoeken van Kadaster Natuurlijk Personen met free query op geslachtsnaam (minimaal 2 karakters, exact match) en geboortedatum (optioneel, format: dd-MM-yyyy)  
    of  
    zoeken van Kadaster- of Ingeschreven Niet Natuurlijk Personen met free query op statutaire naam (minimaal 2 karakters, exact match) en statutaire zetel (optioneel)
  license:
    name: European Union Public License, version 1.2 (EUPL-1.2)
    url: https://eupl.eu/1.2/nl/
  version: 1.0.0
paths:
  /kadasterpersonen:
    get:
      tags:
        - kadasterpersonen
      description: |
        Zoeken naar Kadaster personen op basis van free query.  
        Resultaat wordt gesorteerd op geslachtsnaam/statutairenaam, voorvoegsel, voornamen, geboortedatum
      parameters:
        - $ref: '#/components/parameters/api-version'
        - name: q
          in: query
          required: true
          schema:
            type: string
          description: |
            free query op geslachtsnaam (minimaal 2 karakters, exact match) en geboortedatum (optioneel, format: dd-MM-yyyy)  
            of  
            free query op statutaire naam (minimaal 2 karakters, exact match) en statutaire zetel (optioneel)
        - name: rechtsvormcode
          in: query
          required: false
          schema:
            type: string
          description: |
            code van een rechtsvorm, bepaald uit de rechtsvorm waardelijst
        - name: zoektype
          in: query
          required: false
          schema:
            type: string
            enum:
            - np
            - nnp
          description: |
            np: zoeken naar KadasterNatuurlijkPersonen  
            nnp: zoeken naar KadasterNietNatuurlijkPersonen en IngeschrevenNietNatuurlijkPersonen

            Als er geen type wordt opgegeven, wordt er naar zowel KadasterNatuurlijkPersonen, KadasterNietNatuurlijkPersonen en IngeschrevenNietNatuurlijkPersonen gezocht
      responses:
        200:
          $ref: '#/components/responses/ZoekKadasterPersonenResponse'
        404:
          $ref: '#/components/responses/404'
components:
  headers:
    api_version:
      schema:
        type: integer
        description: Geeft een specifieke major API-versie aan in de context van een specifieke aanroep.
        example: 1
    warning:
      schema:
        type: string
        description: 'zie RFC 7234. In het geval een major versie wordt uitgefaseerd, gebruiken we warn-code 299 ("Miscellaneous Persistent Warning") en het API end-point (inclusief versienummer) als de warn-agent van de warning, gevolgd door de warn-text met de human-readable waarschuwing'
        example: '299 https://service.../api/.../v1 "Deze versie van de API is verouderd en zal uit dienst worden genomen op 2018-02-01. Raadpleeg voor meer informatie hier de documentatie: https://omgevingswet.../api/.../v1".'
    X_Rate_Limit_Limit:
      schema:
        type: integer
    X_Rate_Limit_Remaining:
      schema:
        type: integer
    X_Rate_Limit_Reset:
      schema:
        type: integer
  parameters:
    api-version:
      name: api-version
      in: header
      required: false
      description: "Bevat de major-versie van de aan te roepen API conform [Landelijke API-strategie](https://geonovum.github.io/KP-APIs/#versioning)."
      schema:
        type: integer
        example: 1
  responses:
    ZoekKadasterPersonenResponse:
      description: Kadaster personen die aan de opgegeven zoek parameters voldoen
      headers:
        api-version:
          $ref: '#/components/headers/api_version'
        warning:
          $ref: '#/components/headers/warning'
        X-Rate-Limit-Limit:
          $ref: '#/components/headers/X_Rate_Limit_Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/components/headers/X_Rate_Limit_Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X_Rate_Limit_Reset'
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/KadasterPersoonHalCollectie'
    404:
      description: Not Found
      headers:
        api-version:
          $ref: '#/components/headers/api_version'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Foutbericht'
          example:
            type: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#/10.4.5 404 Not Found
            title: Opgevraagde resource bestaat niet.
            status: 404
            detail: The server has not found anything matching the Request-URI.
            instance: https://datapunt.voorbeeldgemeente.nl/api/v1/resourcenaam?parameter=waarde
            code: notFound
  schemas:
    KadasterPersoonHalCollectie:
      type: object
      properties:
        _link:
          $ref: '#/components/schemas/HalCollectionLinks'
        kadasterPersonen:
          type: array
          items:
            $ref: '#/components/schemas/KadasterPersoonHal'
    KadasterPersoonHal:
      description: |
        abstract base class voor Kadaster personen met HAL links t.b.v. toepassen van polymorphisme.
      allOf:
        - $ref: '#/components/schemas/KadasterPersoon'
      properties:
        _link:
          $ref: '#/components/schemas/KadasterPersoonHal_links'
      discriminator:
        propertyName: kadasterPersoonType
    KadasterPersoonHal_links:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
    KadasterNatuurlijkPersoonHal:
      allOf:
        - $ref: '#/components/schemas/KadasterNatuurlijkPersoon'
        - $ref: '#/components/schemas/KadasterPersoonHal'
    KadasterNietNatuurlijkPersoonHal:
      allOf:
        - $ref: '#/components/schemas/KadasterNietNatuurlijkPersoon'
        - $ref: '#/components/schemas/KadasterPersoonHal'
    IngeschrevenNietNatuurlijkPersoonHal:
      allOf:
        - $ref: '#/components/schemas/IngeschrevenNietNatuurlijkPersoon'
        - $ref: '#/components/schemas/KadasterPersoonHal'
    KadasterPersoon:
      type: object
      description: |
        abstract base class voor Kadaster personen t.b.v. toepassen van polymorphisme.
      properties:
        identificatie:
          type: string
      discriminator:
        propertyName: kadasterPersoonType
    KadasterNatuurlijkPersoon:
      allOf:
        - $ref: '#/components/schemas/KadasterPersoon'
      properties:
        voornamen:
          type: string
        voorvoegselGeslachtsnaam:
          type: string
        geslachtsnaam:
          type: string
        geboorte:
          $ref: '#/components/schemas/Geboorte'
    IngeschrevenNietNatuurlijkPersoon:
      allOf:
        - $ref: '#/components/schemas/KadasterNietNatuurlijkPersoon'
      properties:
        kvknummer:
          type: string
        rsin:
          type: string
    KadasterNietNatuurlijkPersoon:
      allOf:
        - $ref: '#/components/schemas/KadasterPersoon'
      properties:
        statutaireNaam:
          type: string
        vestiging:
          type: string
    Geboorte:
      description: |
        Gegevens over de geboorte van respectievelijk de persoon, de ouder,
        de echtgenoot/geregistreerd partner, de eerdere echtgenoot/geregistreerd
        partner of het kind.
        * **datum** : Datum waarop de persoon is geboren.
        * **land** : Land waar de persoon is geboren.
        * **plaats** : De plaats waar een persoon is geboren. Voor een plaats buiten Nederland is gemeentecode=1999
        (RNI) en gemeentenaam de buitenlandse plaatsnaam of aanduiding.
      type: object
      properties:
        datum:
          $ref: '#/components/schemas/Datum_onvolledig'
        land:
          $ref: '#/components/schemas/Waardetabel'
        plaats:
          $ref: '#/components/schemas/Waardetabel'
    Waardetabel:
      type: object
      description:
        Generieke tabel met waarden om een code en omschrijving op te nemen.
      properties:
        code:
          type: string
          title: code
          description: ""
        omschrijving:
          type: string
          title: omschrijving
          description: ""
    Datum_onvolledig:
      type: object
      description: |
        Gegevens over de datums die mogelijk niet volledig zijn, maar
        waarvan de bekende gedeeltes wel moeten kunnen worden uitgewisseld. Als
        de volledige datum bekend is worden alle elementen gevuld.
      properties:
        dag:
          type: integer
          title: dag
          description: |
            De dag. Als de dag van de datum bekend is wordt deze hier
            ingevuld. Ook als de volledige datum bekend is.
          minimum: 1
          maximum: 31
          example: 3
        datum:
          type: string
          title: datum
          description: |
            De volledige datum die in de `date` definitie past. Dit element
            wordt alleen gevuld als de volledige datum bekend is.
          format: date
          example: 1989-05-03
        jaar:
          type: integer
          title: jaar
          description: |
            Het jaar van de datum. Als het jaar bekend is wordt dit element
            gevuld, ook als de volledige datum bekend is.
          maximum: 9999
          example: 1989
        maand:
          type: integer
          title: maand
          description: |
            De maand. Als de maand van een datum bekend is wordt deze
            hier ingevuld. Ook als de volledige datum is ingevuld.
          minimum: 1
          maximum: 12
          example: 5
    HalCollectionLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HalLink'
    HalLink:
      description: De Link Object zoals gespecificeerd in https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5
      type: object
      required: 
        - href
      properties:
        href:
          $ref: "#/components/schemas/Href"
        type:
         description: "Met dit element wordt aangegeven in welk domein de resource te vinden is waarnaar deze link verwijst. Voorbeelden daarvan zijn *BAG*, *BRP*, *BRK*, *HR*. "
         type: string
         example: "BAG"   
    Href:
      type: string
      format: uri
      example: datapunt.voorbeeldgemeente.nl/api/resourcename/123456789
    Foutbericht:
      type: object
      description: Terugmelding bij een fout. JSON representatie in lijn met [RFC7807](https://tools.ietf.org/html/rfc7807).
      properties:
        type:
          type: string
          format: uri
          description: Link naar meer informatie over deze fout
        title:
          type: string
          description: Beschrijving van de fout
        status:
          type: integer
          description: Http status code
        detail:
          type: string
          description: Details over de fout
        instance:
          type: string
          format: uri
          description: Uri van de aanroep die de fout heeft veroorzaakt
        code:
          type: string
          description: Systeemcode die het type fout aangeeft
          minLength: 1
    
