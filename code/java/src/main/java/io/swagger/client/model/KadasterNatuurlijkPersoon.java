/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Adres;
import io.swagger.client.model.Geboorte;
import io.swagger.client.model.GeslachtEnum;
import io.swagger.client.model.HeeftPartnerschap;
import io.swagger.client.model.KadasterPersoon;
import io.swagger.client.model.Naam;
import io.swagger.client.model.Overlijden;
import io.swagger.client.model.Postadres;
import io.swagger.client.model.Waardelijst;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * KadasterNatuurlijkPersoon
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-02T13:36:51.120+02:00[Europe/Amsterdam]")
public class KadasterNatuurlijkPersoon extends KadasterPersoon {
  @SerializedName("geheimhoudingPersoonsgegevens")
  private Boolean geheimhoudingPersoonsgegevens = null;

  @SerializedName("landWaarnaarVertrokken")
  private Waardelijst landWaarnaarVertrokken = null;

  @SerializedName("geslachtsaanduiding")
  private GeslachtEnum geslachtsaanduiding = null;

  @SerializedName("heeftPartnerschap")
  private List<HeeftPartnerschap> heeftPartnerschap = null;

  @SerializedName("naam")
  private Naam naam = null;

  @SerializedName("geboorte")
  private Geboorte geboorte = null;

  @SerializedName("overlijden")
  private Overlijden overlijden = null;

  public KadasterNatuurlijkPersoon geheimhoudingPersoonsgegevens(Boolean geheimhoudingPersoonsgegevens) {
    this.geheimhoudingPersoonsgegevens = geheimhoudingPersoonsgegevens;
    return this;
  }

   /**
   * Aanduiding die aangeeft dat gegevens van een persoon wel of niet verstrekt mogen worden.
   * @return geheimhoudingPersoonsgegevens
  **/
  @Schema(description = "Aanduiding die aangeeft dat gegevens van een persoon wel of niet verstrekt mogen worden.")
  public Boolean isGeheimhoudingPersoonsgegevens() {
    return geheimhoudingPersoonsgegevens;
  }

  public void setGeheimhoudingPersoonsgegevens(Boolean geheimhoudingPersoonsgegevens) {
    this.geheimhoudingPersoonsgegevens = geheimhoudingPersoonsgegevens;
  }

  public KadasterNatuurlijkPersoon landWaarnaarVertrokken(Waardelijst landWaarnaarVertrokken) {
    this.landWaarnaarVertrokken = landWaarnaarVertrokken;
    return this;
  }

   /**
   * Get landWaarnaarVertrokken
   * @return landWaarnaarVertrokken
  **/
  @Schema(description = "")
  public Waardelijst getLandWaarnaarVertrokken() {
    return landWaarnaarVertrokken;
  }

  public void setLandWaarnaarVertrokken(Waardelijst landWaarnaarVertrokken) {
    this.landWaarnaarVertrokken = landWaarnaarVertrokken;
  }

  public KadasterNatuurlijkPersoon geslachtsaanduiding(GeslachtEnum geslachtsaanduiding) {
    this.geslachtsaanduiding = geslachtsaanduiding;
    return this;
  }

   /**
   * Get geslachtsaanduiding
   * @return geslachtsaanduiding
  **/
  @Schema(description = "")
  public GeslachtEnum getGeslachtsaanduiding() {
    return geslachtsaanduiding;
  }

  public void setGeslachtsaanduiding(GeslachtEnum geslachtsaanduiding) {
    this.geslachtsaanduiding = geslachtsaanduiding;
  }

  public KadasterNatuurlijkPersoon heeftPartnerschap(List<HeeftPartnerschap> heeftPartnerschap) {
    this.heeftPartnerschap = heeftPartnerschap;
    return this;
  }

  public KadasterNatuurlijkPersoon addHeeftPartnerschapItem(HeeftPartnerschap heeftPartnerschapItem) {
    if (this.heeftPartnerschap == null) {
      this.heeftPartnerschap = new ArrayList<HeeftPartnerschap>();
    }
    this.heeftPartnerschap.add(heeftPartnerschapItem);
    return this;
  }

   /**
   * Get heeftPartnerschap
   * @return heeftPartnerschap
  **/
  @Schema(description = "")
  public List<HeeftPartnerschap> getHeeftPartnerschap() {
    return heeftPartnerschap;
  }

  public void setHeeftPartnerschap(List<HeeftPartnerschap> heeftPartnerschap) {
    this.heeftPartnerschap = heeftPartnerschap;
  }

  public KadasterNatuurlijkPersoon naam(Naam naam) {
    this.naam = naam;
    return this;
  }

   /**
   * Get naam
   * @return naam
  **/
  @Schema(description = "")
  public Naam getNaam() {
    return naam;
  }

  public void setNaam(Naam naam) {
    this.naam = naam;
  }

  public KadasterNatuurlijkPersoon geboorte(Geboorte geboorte) {
    this.geboorte = geboorte;
    return this;
  }

   /**
   * Get geboorte
   * @return geboorte
  **/
  @Schema(description = "")
  public Geboorte getGeboorte() {
    return geboorte;
  }

  public void setGeboorte(Geboorte geboorte) {
    this.geboorte = geboorte;
  }

  public KadasterNatuurlijkPersoon overlijden(Overlijden overlijden) {
    this.overlijden = overlijden;
    return this;
  }

   /**
   * Get overlijden
   * @return overlijden
  **/
  @Schema(description = "")
  public Overlijden getOverlijden() {
    return overlijden;
  }

  public void setOverlijden(Overlijden overlijden) {
    this.overlijden = overlijden;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KadasterNatuurlijkPersoon kadasterNatuurlijkPersoon = (KadasterNatuurlijkPersoon) o;
    return Objects.equals(this.geheimhoudingPersoonsgegevens, kadasterNatuurlijkPersoon.geheimhoudingPersoonsgegevens) &&
        Objects.equals(this.landWaarnaarVertrokken, kadasterNatuurlijkPersoon.landWaarnaarVertrokken) &&
        Objects.equals(this.geslachtsaanduiding, kadasterNatuurlijkPersoon.geslachtsaanduiding) &&
        Objects.equals(this.heeftPartnerschap, kadasterNatuurlijkPersoon.heeftPartnerschap) &&
        Objects.equals(this.naam, kadasterNatuurlijkPersoon.naam) &&
        Objects.equals(this.geboorte, kadasterNatuurlijkPersoon.geboorte) &&
        Objects.equals(this.overlijden, kadasterNatuurlijkPersoon.overlijden) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(geheimhoudingPersoonsgegevens, landWaarnaarVertrokken, geslachtsaanduiding, heeftPartnerschap, naam, geboorte, overlijden, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KadasterNatuurlijkPersoon {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    geheimhoudingPersoonsgegevens: ").append(toIndentedString(geheimhoudingPersoonsgegevens)).append("\n");
    sb.append("    landWaarnaarVertrokken: ").append(toIndentedString(landWaarnaarVertrokken)).append("\n");
    sb.append("    geslachtsaanduiding: ").append(toIndentedString(geslachtsaanduiding)).append("\n");
    sb.append("    heeftPartnerschap: ").append(toIndentedString(heeftPartnerschap)).append("\n");
    sb.append("    naam: ").append(toIndentedString(naam)).append("\n");
    sb.append("    geboorte: ").append(toIndentedString(geboorte)).append("\n");
    sb.append("    overlijden: ").append(toIndentedString(overlijden)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
