/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.BadRequestFoutbericht;
import io.swagger.client.model.Foutbericht;
import io.swagger.client.model.KadastraalOnroerendeZaakHal;
import io.swagger.client.model.KadastraalOnroerendeZaakHalCollectie;
import io.swagger.client.model.TypeGerechtigdeEnum;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class KadastraalOnroerendeZakenApi {
    private ApiClient apiClient;

    public KadastraalOnroerendeZakenApi() {
        this(Configuration.getDefaultApiClient());
    }

    public KadastraalOnroerendeZakenApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getKadastraalOnroerendeZaak
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getKadastraalOnroerendeZaakCall(String kadastraalonroerendezaakidentificatie, String acceptCrs, String expand, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/kadastraalonroerendezaken/{kadastraalonroerendezaakidentificatie}"
            .replaceAll("\\{" + "kadastraalonroerendezaakidentificatie" + "\\}", apiClient.escapeString(kadastraalonroerendezaakidentificatie.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("expand", expand));
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptCrs != null)
        localVarHeaderParams.put("Accept-Crs", apiClient.parameterToString(acceptCrs));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/hal+json", "application/problem+json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getKadastraalOnroerendeZaakValidateBeforeCall(String kadastraalonroerendezaakidentificatie, String acceptCrs, String expand, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'kadastraalonroerendezaakidentificatie' is set
        if (kadastraalonroerendezaakidentificatie == null) {
            throw new ApiException("Missing the required parameter 'kadastraalonroerendezaakidentificatie' when calling getKadastraalOnroerendeZaak(Async)");
        }
        
        com.squareup.okhttp.Call call = getKadastraalOnroerendeZaakCall(kadastraalonroerendezaakidentificatie, acceptCrs, expand, fields, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * Het raadplegen van een kadastrale onroerende zaak.  Met gebruik van de parameter expand kunnen zakelijkgerechtigden direct worden meegeladen. 
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @return KadastraalOnroerendeZaakHal
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public KadastraalOnroerendeZaakHal getKadastraalOnroerendeZaak(String kadastraalonroerendezaakidentificatie, String acceptCrs, String expand, String fields) throws ApiException {
        ApiResponse<KadastraalOnroerendeZaakHal> resp = getKadastraalOnroerendeZaakWithHttpInfo(kadastraalonroerendezaakidentificatie, acceptCrs, expand, fields);
        return resp.getData();
    }

    /**
     * 
     * Het raadplegen van een kadastrale onroerende zaak.  Met gebruik van de parameter expand kunnen zakelijkgerechtigden direct worden meegeladen. 
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @return ApiResponse&lt;KadastraalOnroerendeZaakHal&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<KadastraalOnroerendeZaakHal> getKadastraalOnroerendeZaakWithHttpInfo(String kadastraalonroerendezaakidentificatie, String acceptCrs, String expand, String fields) throws ApiException {
        com.squareup.okhttp.Call call = getKadastraalOnroerendeZaakValidateBeforeCall(kadastraalonroerendezaakidentificatie, acceptCrs, expand, fields, null, null);
        Type localVarReturnType = new TypeToken<KadastraalOnroerendeZaakHal>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Het raadplegen van een kadastrale onroerende zaak.  Met gebruik van de parameter expand kunnen zakelijkgerechtigden direct worden meegeladen. 
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getKadastraalOnroerendeZaakAsync(String kadastraalonroerendezaakidentificatie, String acceptCrs, String expand, String fields, final ApiCallback<KadastraalOnroerendeZaakHal> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getKadastraalOnroerendeZaakValidateBeforeCall(kadastraalonroerendezaakidentificatie, acceptCrs, expand, fields, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<KadastraalOnroerendeZaakHal>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getKadastraalOnroerendeZaken
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param kadastraleaanduiding Kadastrale aanduiding is een unieke aanduiding van een onroerende zaak. De volgorde waarin deze string wordt opgebouwd is - [Kadastrale gemeente](http://www.kadaster.nl/schemas/waardelijsten/KadastraleGemeente/). - sectie, 1 of 2 hoofdletters - perceelnummer, 1 tot 5 cijfers - appartementsrechtVolgnummer, Hoofdletter A gevolgd door 1 tot 4 cijfers (optioneel)  gescheiden door een spatie (optional)
     * @param ingeschrevenpersoonBurgerservicenummer Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param persoonKadasterpersoonidentificatie De identificatie van de Kadasterpersoon, een niet-ingeschreven persoon of een rechtspersoon waarvan de gegevens door het kadaster zijn geregistreerd. Deze persoon is zakelijk gerechtigde van de Kadastraal Onroerende Zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param zakelijkgerechtigdeTypegerechtigde Een typering van het recht dat de zakelijkgerechtigde heeft op de Kadastraal Onroerende Zaak. Door het gebruik van deze query-parameter worden Kadastraal Onroerende Zaken geretourneerd waar een recht op rust van het opgegeven type. (optional)
     * @param adresPostcode De postcode van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummer Het huisnummer van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisletter De huisletter van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummertoevoeging De huisnummertoevoeging van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getKadastraalOnroerendeZakenCall(String acceptCrs, String expand, String fields, String kadastraleaanduiding, String ingeschrevenpersoonBurgerservicenummer, String persoonKadasterpersoonidentificatie, TypeGerechtigdeEnum zakelijkgerechtigdeTypegerechtigde, String adresPostcode, Integer adresHuisnummer, String adresHuisletter, String adresHuisnummertoevoeging, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/kadastraalonroerendezaken";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (expand != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("expand", expand));
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));
        if (kadastraleaanduiding != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("kadastraleaanduiding", kadastraleaanduiding));
        if (ingeschrevenpersoonBurgerservicenummer != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("ingeschrevenpersoon__burgerservicenummer", ingeschrevenpersoonBurgerservicenummer));
        if (persoonKadasterpersoonidentificatie != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("persoon_kadasterpersoonidentificatie", persoonKadasterpersoonidentificatie));
        if (zakelijkgerechtigdeTypegerechtigde != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("zakelijkgerechtigde__typegerechtigde", zakelijkgerechtigdeTypegerechtigde));
        if (adresPostcode != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("adres__postcode", adresPostcode));
        if (adresHuisnummer != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("adres__huisnummer", adresHuisnummer));
        if (adresHuisletter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("adres__huisletter", adresHuisletter));
        if (adresHuisnummertoevoeging != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("adres__huisnummertoevoeging", adresHuisnummertoevoeging));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (acceptCrs != null)
        localVarHeaderParams.put("Accept-Crs", apiClient.parameterToString(acceptCrs));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/hal+json", "application/problem+json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getKadastraalOnroerendeZakenValidateBeforeCall(String acceptCrs, String expand, String fields, String kadastraleaanduiding, String ingeschrevenpersoonBurgerservicenummer, String persoonKadasterpersoonidentificatie, TypeGerechtigdeEnum zakelijkgerechtigdeTypegerechtigde, String adresPostcode, Integer adresHuisnummer, String adresHuisletter, String adresHuisnummertoevoeging, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        com.squareup.okhttp.Call call = getKadastraalOnroerendeZakenCall(acceptCrs, expand, fields, kadastraleaanduiding, ingeschrevenpersoonBurgerservicenummer, persoonKadasterpersoonidentificatie, zakelijkgerechtigdeTypegerechtigde, adresPostcode, adresHuisnummer, adresHuisletter, adresHuisnummertoevoeging, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * Het zoeken van kadastraal onroerende zaken door een of meer parameters op te geven uit de categorieën kadastrale aanduiding, ingeschreven persoon, kadasterpersoon of Adres. Het combineren van parameters uit verschillende categorieën is niet toegestaan. 1.  Kadastrale aanduiding 2.  Ingeschreven persoon als zakelijk gerechtigde     -  burgerservicenummer (verplicht)     -  typegerechtigde (optioneel) 3.  Niet ingeschreven persoon of niet natuurlijk persoon als zakelijk gerechtigde     -  kadasterpersoonidentificatie (verplicht)     -  typegerechtigde (optioneel) 4.  Adres     -  postcode (verplicht)     -  huisnummer (optioneel)     -  huisletter (optioneel)     -  huisnummertoevoeging (optioneel)  Met gebruik van de parameter expand kunnen zakelijkgerechtigden direct worden meegeladen.  Het maximale aantal zoekresultaten dat geretourneerd wordt is aan de provider om te bepalen. Als het resultaat van de de request dit aantal overtreft worden er geen resultaten geretourneerd en volgt er een foutmelding. 
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param kadastraleaanduiding Kadastrale aanduiding is een unieke aanduiding van een onroerende zaak. De volgorde waarin deze string wordt opgebouwd is - [Kadastrale gemeente](http://www.kadaster.nl/schemas/waardelijsten/KadastraleGemeente/). - sectie, 1 of 2 hoofdletters - perceelnummer, 1 tot 5 cijfers - appartementsrechtVolgnummer, Hoofdletter A gevolgd door 1 tot 4 cijfers (optioneel)  gescheiden door een spatie (optional)
     * @param ingeschrevenpersoonBurgerservicenummer Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param persoonKadasterpersoonidentificatie De identificatie van de Kadasterpersoon, een niet-ingeschreven persoon of een rechtspersoon waarvan de gegevens door het kadaster zijn geregistreerd. Deze persoon is zakelijk gerechtigde van de Kadastraal Onroerende Zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param zakelijkgerechtigdeTypegerechtigde Een typering van het recht dat de zakelijkgerechtigde heeft op de Kadastraal Onroerende Zaak. Door het gebruik van deze query-parameter worden Kadastraal Onroerende Zaken geretourneerd waar een recht op rust van het opgegeven type. (optional)
     * @param adresPostcode De postcode van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummer Het huisnummer van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisletter De huisletter van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummertoevoeging De huisnummertoevoeging van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @return KadastraalOnroerendeZaakHalCollectie
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public KadastraalOnroerendeZaakHalCollectie getKadastraalOnroerendeZaken(String acceptCrs, String expand, String fields, String kadastraleaanduiding, String ingeschrevenpersoonBurgerservicenummer, String persoonKadasterpersoonidentificatie, TypeGerechtigdeEnum zakelijkgerechtigdeTypegerechtigde, String adresPostcode, Integer adresHuisnummer, String adresHuisletter, String adresHuisnummertoevoeging) throws ApiException {
        ApiResponse<KadastraalOnroerendeZaakHalCollectie> resp = getKadastraalOnroerendeZakenWithHttpInfo(acceptCrs, expand, fields, kadastraleaanduiding, ingeschrevenpersoonBurgerservicenummer, persoonKadasterpersoonidentificatie, zakelijkgerechtigdeTypegerechtigde, adresPostcode, adresHuisnummer, adresHuisletter, adresHuisnummertoevoeging);
        return resp.getData();
    }

    /**
     * 
     * Het zoeken van kadastraal onroerende zaken door een of meer parameters op te geven uit de categorieën kadastrale aanduiding, ingeschreven persoon, kadasterpersoon of Adres. Het combineren van parameters uit verschillende categorieën is niet toegestaan. 1.  Kadastrale aanduiding 2.  Ingeschreven persoon als zakelijk gerechtigde     -  burgerservicenummer (verplicht)     -  typegerechtigde (optioneel) 3.  Niet ingeschreven persoon of niet natuurlijk persoon als zakelijk gerechtigde     -  kadasterpersoonidentificatie (verplicht)     -  typegerechtigde (optioneel) 4.  Adres     -  postcode (verplicht)     -  huisnummer (optioneel)     -  huisletter (optioneel)     -  huisnummertoevoeging (optioneel)  Met gebruik van de parameter expand kunnen zakelijkgerechtigden direct worden meegeladen.  Het maximale aantal zoekresultaten dat geretourneerd wordt is aan de provider om te bepalen. Als het resultaat van de de request dit aantal overtreft worden er geen resultaten geretourneerd en volgt er een foutmelding. 
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param kadastraleaanduiding Kadastrale aanduiding is een unieke aanduiding van een onroerende zaak. De volgorde waarin deze string wordt opgebouwd is - [Kadastrale gemeente](http://www.kadaster.nl/schemas/waardelijsten/KadastraleGemeente/). - sectie, 1 of 2 hoofdletters - perceelnummer, 1 tot 5 cijfers - appartementsrechtVolgnummer, Hoofdletter A gevolgd door 1 tot 4 cijfers (optioneel)  gescheiden door een spatie (optional)
     * @param ingeschrevenpersoonBurgerservicenummer Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param persoonKadasterpersoonidentificatie De identificatie van de Kadasterpersoon, een niet-ingeschreven persoon of een rechtspersoon waarvan de gegevens door het kadaster zijn geregistreerd. Deze persoon is zakelijk gerechtigde van de Kadastraal Onroerende Zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param zakelijkgerechtigdeTypegerechtigde Een typering van het recht dat de zakelijkgerechtigde heeft op de Kadastraal Onroerende Zaak. Door het gebruik van deze query-parameter worden Kadastraal Onroerende Zaken geretourneerd waar een recht op rust van het opgegeven type. (optional)
     * @param adresPostcode De postcode van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummer Het huisnummer van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisletter De huisletter van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummertoevoeging De huisnummertoevoeging van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @return ApiResponse&lt;KadastraalOnroerendeZaakHalCollectie&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<KadastraalOnroerendeZaakHalCollectie> getKadastraalOnroerendeZakenWithHttpInfo(String acceptCrs, String expand, String fields, String kadastraleaanduiding, String ingeschrevenpersoonBurgerservicenummer, String persoonKadasterpersoonidentificatie, TypeGerechtigdeEnum zakelijkgerechtigdeTypegerechtigde, String adresPostcode, Integer adresHuisnummer, String adresHuisletter, String adresHuisnummertoevoeging) throws ApiException {
        com.squareup.okhttp.Call call = getKadastraalOnroerendeZakenValidateBeforeCall(acceptCrs, expand, fields, kadastraleaanduiding, ingeschrevenpersoonBurgerservicenummer, persoonKadasterpersoonidentificatie, zakelijkgerechtigdeTypegerechtigde, adresPostcode, adresHuisnummer, adresHuisletter, adresHuisnummertoevoeging, null, null);
        Type localVarReturnType = new TypeToken<KadastraalOnroerendeZaakHalCollectie>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Het zoeken van kadastraal onroerende zaken door een of meer parameters op te geven uit de categorieën kadastrale aanduiding, ingeschreven persoon, kadasterpersoon of Adres. Het combineren van parameters uit verschillende categorieën is niet toegestaan. 1.  Kadastrale aanduiding 2.  Ingeschreven persoon als zakelijk gerechtigde     -  burgerservicenummer (verplicht)     -  typegerechtigde (optioneel) 3.  Niet ingeschreven persoon of niet natuurlijk persoon als zakelijk gerechtigde     -  kadasterpersoonidentificatie (verplicht)     -  typegerechtigde (optioneel) 4.  Adres     -  postcode (verplicht)     -  huisnummer (optioneel)     -  huisletter (optioneel)     -  huisnummertoevoeging (optioneel)  Met gebruik van de parameter expand kunnen zakelijkgerechtigden direct worden meegeladen.  Het maximale aantal zoekresultaten dat geretourneerd wordt is aan de provider om te bepalen. Als het resultaat van de de request dit aantal overtreft worden er geen resultaten geretourneerd en volgt er een foutmelding. 
     * @param acceptCrs Gewenste CRS van de coördinaten in de response. (optional, default to epsg:28992)
     * @param expand Hiermee kun je opgeven welke gerelateerde resources meegeleverd moeten worden, en hun inhoud naar behoefte aanpassen. Hele resources of enkele properties geef je in de expand parameter kommagescheiden op. Properties die je wil ontvangen geef je op met de resource-naam gevolgd door de property naam, met daartussen een punt. In de definitie van het antwoord kun je bij _embedded zien welke gerelateerde resources meegeleverd kunnen worden. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/expand.feature). (optional)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param kadastraleaanduiding Kadastrale aanduiding is een unieke aanduiding van een onroerende zaak. De volgorde waarin deze string wordt opgebouwd is - [Kadastrale gemeente](http://www.kadaster.nl/schemas/waardelijsten/KadastraleGemeente/). - sectie, 1 of 2 hoofdletters - perceelnummer, 1 tot 5 cijfers - appartementsrechtVolgnummer, Hoofdletter A gevolgd door 1 tot 4 cijfers (optioneel)  gescheiden door een spatie (optional)
     * @param ingeschrevenpersoonBurgerservicenummer Het burgerservicenummer van de persoon die een zakelijk recht op een kadastraal onroerende zaak heeft. Deze persoon is zakelijk gerechtigde van de kadastraal onroerende zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param persoonKadasterpersoonidentificatie De identificatie van de Kadasterpersoon, een niet-ingeschreven persoon of een rechtspersoon waarvan de gegevens door het kadaster zijn geregistreerd. Deze persoon is zakelijk gerechtigde van de Kadastraal Onroerende Zaak. Door deze query-parameter te gebruiken worden Kadastraal Onroerende Zaken geretourneerd waar deze persoon een zakelijk recht op heeft. (optional)
     * @param zakelijkgerechtigdeTypegerechtigde Een typering van het recht dat de zakelijkgerechtigde heeft op de Kadastraal Onroerende Zaak. Door het gebruik van deze query-parameter worden Kadastraal Onroerende Zaken geretourneerd waar een recht op rust van het opgegeven type. (optional)
     * @param adresPostcode De postcode van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummer Het huisnummer van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisletter De huisletter van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param adresHuisnummertoevoeging De huisnummertoevoeging van het adres van de objectlocatie van de kadastraal onroerende zaak (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getKadastraalOnroerendeZakenAsync(String acceptCrs, String expand, String fields, String kadastraleaanduiding, String ingeschrevenpersoonBurgerservicenummer, String persoonKadasterpersoonidentificatie, TypeGerechtigdeEnum zakelijkgerechtigdeTypegerechtigde, String adresPostcode, Integer adresHuisnummer, String adresHuisletter, String adresHuisnummertoevoeging, final ApiCallback<KadastraalOnroerendeZaakHalCollectie> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getKadastraalOnroerendeZakenValidateBeforeCall(acceptCrs, expand, fields, kadastraleaanduiding, ingeschrevenpersoonBurgerservicenummer, persoonKadasterpersoonidentificatie, zakelijkgerechtigdeTypegerechtigde, adresPostcode, adresHuisnummer, adresHuisletter, adresHuisnummertoevoeging, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<KadastraalOnroerendeZaakHalCollectie>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
