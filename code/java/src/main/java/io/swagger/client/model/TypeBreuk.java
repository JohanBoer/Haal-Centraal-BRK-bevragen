/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Een deling van twee gehele getallen
 */
@Schema(description = "Een deling van twee gehele getallen")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-02T13:36:51.120+02:00[Europe/Amsterdam]")
public class TypeBreuk {
  @SerializedName("noemer")
  private Integer noemer = null;

  @SerializedName("teller")
  private Integer teller = null;

  public TypeBreuk noemer(Integer noemer) {
    this.noemer = noemer;
    return this;
  }

   /**
   * De noemer van het deel.
   * minimum: 1
   * maximum: 99999999
   * @return noemer
  **/
  @Schema(description = "De noemer van het deel.")
  public Integer getNoemer() {
    return noemer;
  }

  public void setNoemer(Integer noemer) {
    this.noemer = noemer;
  }

  public TypeBreuk teller(Integer teller) {
    this.teller = teller;
    return this;
  }

   /**
   * Het aantal delen. De teller is altijd lager dan de noemer.
   * maximum: 99999999
   * @return teller
  **/
  @Schema(description = "Het aantal delen. De teller is altijd lager dan de noemer.")
  public Integer getTeller() {
    return teller;
  }

  public void setTeller(Integer teller) {
    this.teller = teller;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TypeBreuk typeBreuk = (TypeBreuk) o;
    return Objects.equals(this.noemer, typeBreuk.noemer) &&
        Objects.equals(this.teller, typeBreuk.teller);
  }

  @Override
  public int hashCode() {
    return Objects.hash(noemer, teller);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TypeBreuk {\n");
    
    sb.append("    noemer: ").append(toIndentedString(noemer)).append("\n");
    sb.append("    teller: ").append(toIndentedString(teller)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
