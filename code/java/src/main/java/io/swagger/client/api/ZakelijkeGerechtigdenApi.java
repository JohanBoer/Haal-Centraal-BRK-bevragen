/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.BadRequestFoutbericht;
import io.swagger.client.model.Foutbericht;
import io.swagger.client.model.TypeGerechtigdeEnum;
import io.swagger.client.model.ZakelijkGerechtigdeHal;
import io.swagger.client.model.ZakelijkGerechtigdeHalCollectie;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ZakelijkeGerechtigdenApi {
    private ApiClient apiClient;

    public ZakelijkeGerechtigdenApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ZakelijkeGerechtigdenApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getZakelijkGerechtigde
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param zakelijkgerechtigdeidentificatie De identificatie van de zakelijk gerechtigde (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getZakelijkGerechtigdeCall(String kadastraalonroerendezaakidentificatie, String zakelijkgerechtigdeidentificatie, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/kadastraalonroerendezaken/{kadastraalonroerendezaakidentificatie}/zakelijkgerechtigden/{zakelijkgerechtigdeidentificatie}"
            .replaceAll("\\{" + "kadastraalonroerendezaakidentificatie" + "\\}", apiClient.escapeString(kadastraalonroerendezaakidentificatie.toString()))
            .replaceAll("\\{" + "zakelijkgerechtigdeidentificatie" + "\\}", apiClient.escapeString(zakelijkgerechtigdeidentificatie.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/hal+json", "application/problem+json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getZakelijkGerechtigdeValidateBeforeCall(String kadastraalonroerendezaakidentificatie, String zakelijkgerechtigdeidentificatie, String fields, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'kadastraalonroerendezaakidentificatie' is set
        if (kadastraalonroerendezaakidentificatie == null) {
            throw new ApiException("Missing the required parameter 'kadastraalonroerendezaakidentificatie' when calling getZakelijkGerechtigde(Async)");
        }
        // verify the required parameter 'zakelijkgerechtigdeidentificatie' is set
        if (zakelijkgerechtigdeidentificatie == null) {
            throw new ApiException("Missing the required parameter 'zakelijkgerechtigdeidentificatie' when calling getZakelijkGerechtigde(Async)");
        }
        
        com.squareup.okhttp.Call call = getZakelijkGerechtigdeCall(kadastraalonroerendezaakidentificatie, zakelijkgerechtigdeidentificatie, fields, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * Het raadplegen van een specifieke zakelijk gerechtigde van een kadastraal onroerende zaak. Het aandeel van de zakelijk gerechtigde wordt altijd geleverd in combinatie met het gezamenlijk aandeel (wanneer twee of meer personen een gezamenlijk aandeel hebben in een zakelijk recht, en ieders afzonderlijke aandeel in het gezamenlijk aandeel niet bekend is)
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param zakelijkgerechtigdeidentificatie De identificatie van de zakelijk gerechtigde (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @return ZakelijkGerechtigdeHal
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ZakelijkGerechtigdeHal getZakelijkGerechtigde(String kadastraalonroerendezaakidentificatie, String zakelijkgerechtigdeidentificatie, String fields) throws ApiException {
        ApiResponse<ZakelijkGerechtigdeHal> resp = getZakelijkGerechtigdeWithHttpInfo(kadastraalonroerendezaakidentificatie, zakelijkgerechtigdeidentificatie, fields);
        return resp.getData();
    }

    /**
     * 
     * Het raadplegen van een specifieke zakelijk gerechtigde van een kadastraal onroerende zaak. Het aandeel van de zakelijk gerechtigde wordt altijd geleverd in combinatie met het gezamenlijk aandeel (wanneer twee of meer personen een gezamenlijk aandeel hebben in een zakelijk recht, en ieders afzonderlijke aandeel in het gezamenlijk aandeel niet bekend is)
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param zakelijkgerechtigdeidentificatie De identificatie van de zakelijk gerechtigde (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @return ApiResponse&lt;ZakelijkGerechtigdeHal&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ZakelijkGerechtigdeHal> getZakelijkGerechtigdeWithHttpInfo(String kadastraalonroerendezaakidentificatie, String zakelijkgerechtigdeidentificatie, String fields) throws ApiException {
        com.squareup.okhttp.Call call = getZakelijkGerechtigdeValidateBeforeCall(kadastraalonroerendezaakidentificatie, zakelijkgerechtigdeidentificatie, fields, null, null);
        Type localVarReturnType = new TypeToken<ZakelijkGerechtigdeHal>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Het raadplegen van een specifieke zakelijk gerechtigde van een kadastraal onroerende zaak. Het aandeel van de zakelijk gerechtigde wordt altijd geleverd in combinatie met het gezamenlijk aandeel (wanneer twee of meer personen een gezamenlijk aandeel hebben in een zakelijk recht, en ieders afzonderlijke aandeel in het gezamenlijk aandeel niet bekend is)
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param zakelijkgerechtigdeidentificatie De identificatie van de zakelijk gerechtigde (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getZakelijkGerechtigdeAsync(String kadastraalonroerendezaakidentificatie, String zakelijkgerechtigdeidentificatie, String fields, final ApiCallback<ZakelijkGerechtigdeHal> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getZakelijkGerechtigdeValidateBeforeCall(kadastraalonroerendezaakidentificatie, zakelijkgerechtigdeidentificatie, fields, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ZakelijkGerechtigdeHal>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getZakelijkGerechtigden
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param typegerechtigde Het type recht dat de zakelijk gerechtigde heeft op de kadastraal onroerende zaak. De waarden van de typering staan in een waardelijst. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getZakelijkGerechtigdenCall(String kadastraalonroerendezaakidentificatie, String fields, TypeGerechtigdeEnum typegerechtigde, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/kadastraalonroerendezaken/{kadastraalonroerendezaakidentificatie}/zakelijkgerechtigden"
            .replaceAll("\\{" + "kadastraalonroerendezaakidentificatie" + "\\}", apiClient.escapeString(kadastraalonroerendezaakidentificatie.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fields != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));
        if (typegerechtigde != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("typegerechtigde", typegerechtigde));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/hal+json", "application/problem+json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getZakelijkGerechtigdenValidateBeforeCall(String kadastraalonroerendezaakidentificatie, String fields, TypeGerechtigdeEnum typegerechtigde, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'kadastraalonroerendezaakidentificatie' is set
        if (kadastraalonroerendezaakidentificatie == null) {
            throw new ApiException("Missing the required parameter 'kadastraalonroerendezaakidentificatie' when calling getZakelijkGerechtigden(Async)");
        }
        
        com.squareup.okhttp.Call call = getZakelijkGerechtigdenCall(kadastraalonroerendezaakidentificatie, fields, typegerechtigde, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * Het zoeken van zakelijk gerechtigden van een kadastraal onroerende zaak. Het aandeel van de zakelijk gerechtigde wordt altijd geleverd in combinatie met het gezamenlijk aandeel (wanneer twee of meer personen een gezamenlijk aandeel hebben in een zakelijk recht, en ieders afzonderlijke aandeel in het gezamenlijk aandeel niet bekend is)
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param typegerechtigde Het type recht dat de zakelijk gerechtigde heeft op de kadastraal onroerende zaak. De waarden van de typering staan in een waardelijst. (optional)
     * @return ZakelijkGerechtigdeHalCollectie
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ZakelijkGerechtigdeHalCollectie getZakelijkGerechtigden(String kadastraalonroerendezaakidentificatie, String fields, TypeGerechtigdeEnum typegerechtigde) throws ApiException {
        ApiResponse<ZakelijkGerechtigdeHalCollectie> resp = getZakelijkGerechtigdenWithHttpInfo(kadastraalonroerendezaakidentificatie, fields, typegerechtigde);
        return resp.getData();
    }

    /**
     * 
     * Het zoeken van zakelijk gerechtigden van een kadastraal onroerende zaak. Het aandeel van de zakelijk gerechtigde wordt altijd geleverd in combinatie met het gezamenlijk aandeel (wanneer twee of meer personen een gezamenlijk aandeel hebben in een zakelijk recht, en ieders afzonderlijke aandeel in het gezamenlijk aandeel niet bekend is)
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param typegerechtigde Het type recht dat de zakelijk gerechtigde heeft op de kadastraal onroerende zaak. De waarden van de typering staan in een waardelijst. (optional)
     * @return ApiResponse&lt;ZakelijkGerechtigdeHalCollectie&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ZakelijkGerechtigdeHalCollectie> getZakelijkGerechtigdenWithHttpInfo(String kadastraalonroerendezaakidentificatie, String fields, TypeGerechtigdeEnum typegerechtigde) throws ApiException {
        com.squareup.okhttp.Call call = getZakelijkGerechtigdenValidateBeforeCall(kadastraalonroerendezaakidentificatie, fields, typegerechtigde, null, null);
        Type localVarReturnType = new TypeToken<ZakelijkGerechtigdeHalCollectie>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Het zoeken van zakelijk gerechtigden van een kadastraal onroerende zaak. Het aandeel van de zakelijk gerechtigde wordt altijd geleverd in combinatie met het gezamenlijk aandeel (wanneer twee of meer personen een gezamenlijk aandeel hebben in een zakelijk recht, en ieders afzonderlijke aandeel in het gezamenlijk aandeel niet bekend is)
     * @param kadastraalonroerendezaakidentificatie De unieke identificatie van een kadastraal onroerende zaak. (required)
     * @param fields Hiermee kun je de inhoud van de resource naar behoefte aanpassen door een door komma&#x27;s gescheiden lijst van property namen op te geven. Bij opgave van niet-bestaande properties wordt een 400 Bad Request teruggegeven. Wanneer de fields parameter niet is opgegeven, worden alle properties met een waarde teruggegeven. Zie [functionele specificaties](https://github.com/VNG-Realisatie/Haal-Centraal-common/blob/v1.0.0/features/fields.feature) (optional)
     * @param typegerechtigde Het type recht dat de zakelijk gerechtigde heeft op de kadastraal onroerende zaak. De waarden van de typering staan in een waardelijst. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getZakelijkGerechtigdenAsync(String kadastraalonroerendezaakidentificatie, String fields, TypeGerechtigdeEnum typegerechtigde, final ApiCallback<ZakelijkGerechtigdeHalCollectie> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getZakelijkGerechtigdenValidateBeforeCall(kadastraalonroerendezaakidentificatie, fields, typegerechtigde, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ZakelijkGerechtigdeHalCollectie>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
