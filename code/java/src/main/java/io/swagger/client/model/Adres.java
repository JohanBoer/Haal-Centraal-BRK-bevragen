/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Waardelijst;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Waardelijst in deze component : [land](http://www.kadaster.nl/schemas/waardelijsten/BRPLand/)
 */
@Schema(description = "Waardelijst in deze component : [land](http://www.kadaster.nl/schemas/waardelijsten/BRPLand/)")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-02T13:36:51.120+02:00[Europe/Amsterdam]")
public class Adres {
  @SerializedName("nummeraanduidingIdentificatie")
  private String nummeraanduidingIdentificatie = null;

  @SerializedName("huisnummer")
  private Integer huisnummer = null;

  @SerializedName("huisletter")
  private String huisletter = null;

  @SerializedName("huisnummertoevoeging")
  private String huisnummertoevoeging = null;

  @SerializedName("straat")
  private String straat = null;

  @SerializedName("postcode")
  private String postcode = null;

  @SerializedName("woonplaats")
  private String woonplaats = null;

  @SerializedName("adresregel1")
  private String adresregel1 = null;

  @SerializedName("adresregel2")
  private String adresregel2 = null;

  @SerializedName("adresregel3")
  private String adresregel3 = null;

  @SerializedName("land")
  private Waardelijst land = null;

  public Adres nummeraanduidingIdentificatie(String nummeraanduidingIdentificatie) {
    this.nummeraanduidingIdentificatie = nummeraanduidingIdentificatie;
    return this;
  }

   /**
   * identificatie van het adres in het geval dit adres in BAG geregistreerd is.
   * @return nummeraanduidingIdentificatie
  **/
  @Schema(description = "identificatie van het adres in het geval dit adres in BAG geregistreerd is.")
  public String getNummeraanduidingIdentificatie() {
    return nummeraanduidingIdentificatie;
  }

  public void setNummeraanduidingIdentificatie(String nummeraanduidingIdentificatie) {
    this.nummeraanduidingIdentificatie = nummeraanduidingIdentificatie;
  }

  public Adres huisnummer(Integer huisnummer) {
    this.huisnummer = huisnummer;
    return this;
  }

   /**
   * URI https://bag.basisregistraties.overheid.nl/doc/begrip/Huisnummer
   * @return huisnummer
  **/
  @Schema(description = "URI https://bag.basisregistraties.overheid.nl/doc/begrip/Huisnummer")
  public Integer getHuisnummer() {
    return huisnummer;
  }

  public void setHuisnummer(Integer huisnummer) {
    this.huisnummer = huisnummer;
  }

  public Adres huisletter(String huisletter) {
    this.huisletter = huisletter;
    return this;
  }

   /**
   * URI https://bag.basisregistraties.overheid.nl/doc/begrip/Huisletter
   * @return huisletter
  **/
  @Schema(example = "A", description = "URI https://bag.basisregistraties.overheid.nl/doc/begrip/Huisletter")
  public String getHuisletter() {
    return huisletter;
  }

  public void setHuisletter(String huisletter) {
    this.huisletter = huisletter;
  }

  public Adres huisnummertoevoeging(String huisnummertoevoeging) {
    this.huisnummertoevoeging = huisnummertoevoeging;
    return this;
  }

   /**
   * URI https://bag.basisregistraties.overheid.nl/doc/begrip/Huisnummertoevoeging
   * @return huisnummertoevoeging
  **/
  @Schema(example = "3", description = "URI https://bag.basisregistraties.overheid.nl/doc/begrip/Huisnummertoevoeging")
  public String getHuisnummertoevoeging() {
    return huisnummertoevoeging;
  }

  public void setHuisnummertoevoeging(String huisnummertoevoeging) {
    this.huisnummertoevoeging = huisnummertoevoeging;
  }

  public Adres straat(String straat) {
    this.straat = straat;
    return this;
  }

   /**
   * Get straat
   * @return straat
  **/
  @Schema(example = "Laan van de landinrichtingscommissie Duiven-Westervoort", description = "")
  public String getStraat() {
    return straat;
  }

  public void setStraat(String straat) {
    this.straat = straat;
  }

  public Adres postcode(String postcode) {
    this.postcode = postcode;
    return this;
  }

   /**
   * Get postcode
   * @return postcode
  **/
  @Schema(example = "1234AA", description = "")
  public String getPostcode() {
    return postcode;
  }

  public void setPostcode(String postcode) {
    this.postcode = postcode;
  }

  public Adres woonplaats(String woonplaats) {
    this.woonplaats = woonplaats;
    return this;
  }

   /**
   * Get woonplaats
   * @return woonplaats
  **/
  @Schema(example = "Nootdorp", description = "")
  public String getWoonplaats() {
    return woonplaats;
  }

  public void setWoonplaats(String woonplaats) {
    this.woonplaats = woonplaats;
  }

  public Adres adresregel1(String adresregel1) {
    this.adresregel1 = adresregel1;
    return this;
  }

   /**
   * Het eerste deel van een adres is een combinatie van de straat en huisnummer.
   * @return adresregel1
  **/
  @Schema(example = "Laan van de landinrichtingscommissie Duiven-Westervoort 26A-3", description = "Het eerste deel van een adres is een combinatie van de straat en huisnummer.")
  public String getAdresregel1() {
    return adresregel1;
  }

  public void setAdresregel1(String adresregel1) {
    this.adresregel1 = adresregel1;
  }

  public Adres adresregel2(String adresregel2) {
    this.adresregel2 = adresregel2;
    return this;
  }

   /**
   * Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode
   * @return adresregel2
  **/
  @Schema(example = "1234AA Nootdorp", description = "Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode")
  public String getAdresregel2() {
    return adresregel2;
  }

  public void setAdresregel2(String adresregel2) {
    this.adresregel2 = adresregel2;
  }

  public Adres adresregel3(String adresregel3) {
    this.adresregel3 = adresregel3;
    return this;
  }

   /**
   * Het derde deel van een adres is optioneel een of meer geografische gebieden van het adres in het buitenland
   * @return adresregel3
  **/
  @Schema(example = "Selangor", description = "Het derde deel van een adres is optioneel een of meer geografische gebieden van het adres in het buitenland")
  public String getAdresregel3() {
    return adresregel3;
  }

  public void setAdresregel3(String adresregel3) {
    this.adresregel3 = adresregel3;
  }

  public Adres land(Waardelijst land) {
    this.land = land;
    return this;
  }

   /**
   * Get land
   * @return land
  **/
  @Schema(description = "")
  public Waardelijst getLand() {
    return land;
  }

  public void setLand(Waardelijst land) {
    this.land = land;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Adres adres = (Adres) o;
    return Objects.equals(this.nummeraanduidingIdentificatie, adres.nummeraanduidingIdentificatie) &&
        Objects.equals(this.huisnummer, adres.huisnummer) &&
        Objects.equals(this.huisletter, adres.huisletter) &&
        Objects.equals(this.huisnummertoevoeging, adres.huisnummertoevoeging) &&
        Objects.equals(this.straat, adres.straat) &&
        Objects.equals(this.postcode, adres.postcode) &&
        Objects.equals(this.woonplaats, adres.woonplaats) &&
        Objects.equals(this.adresregel1, adres.adresregel1) &&
        Objects.equals(this.adresregel2, adres.adresregel2) &&
        Objects.equals(this.adresregel3, adres.adresregel3) &&
        Objects.equals(this.land, adres.land);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nummeraanduidingIdentificatie, huisnummer, huisletter, huisnummertoevoeging, straat, postcode, woonplaats, adresregel1, adresregel2, adresregel3, land);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Adres {\n");
    
    sb.append("    nummeraanduidingIdentificatie: ").append(toIndentedString(nummeraanduidingIdentificatie)).append("\n");
    sb.append("    huisnummer: ").append(toIndentedString(huisnummer)).append("\n");
    sb.append("    huisletter: ").append(toIndentedString(huisletter)).append("\n");
    sb.append("    huisnummertoevoeging: ").append(toIndentedString(huisnummertoevoeging)).append("\n");
    sb.append("    straat: ").append(toIndentedString(straat)).append("\n");
    sb.append("    postcode: ").append(toIndentedString(postcode)).append("\n");
    sb.append("    woonplaats: ").append(toIndentedString(woonplaats)).append("\n");
    sb.append("    adresregel1: ").append(toIndentedString(adresregel1)).append("\n");
    sb.append("    adresregel2: ").append(toIndentedString(adresregel2)).append("\n");
    sb.append("    adresregel3: ").append(toIndentedString(adresregel3)).append("\n");
    sb.append("    land: ").append(toIndentedString(land)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
