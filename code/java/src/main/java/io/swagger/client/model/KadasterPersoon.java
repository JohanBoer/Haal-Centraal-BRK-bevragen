/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Adres;
import io.swagger.client.model.PersoonBasis;
import io.swagger.client.model.Postadres;
import io.swagger.client.model.Waardelijst;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * KadasterPersoon
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-02T13:36:51.120+02:00[Europe/Amsterdam]")
public class KadasterPersoon extends PersoonBasis {
  @SerializedName("domein")
  private String domein = null;

  @SerializedName("indicatieNietToonbareDiakriet")
  private Boolean indicatieNietToonbareDiakriet = null;

  @SerializedName("beschikkingsbevoegdheid")
  private Waardelijst beschikkingsbevoegdheid = null;

  @SerializedName("woonadres")
  private Adres woonadres = null;

  @SerializedName("postadres")
  private Postadres postadres = null;

  @SerializedName("kadastraalOnroerendeZaakIdentificaties")
  private List<String> kadastraalOnroerendeZaakIdentificaties = null;

  public KadasterPersoon domein(String domein) {
    this.domein = domein;
    return this;
  }

   /**
   * Het domein waartoe de identificatie behoort.
   * @return domein
  **/
  @Schema(description = "Het domein waartoe de identificatie behoort.")
  public String getDomein() {
    return domein;
  }

  public void setDomein(String domein) {
    this.domein = domein;
  }

  public KadasterPersoon indicatieNietToonbareDiakriet(Boolean indicatieNietToonbareDiakriet) {
    this.indicatieNietToonbareDiakriet = indicatieNietToonbareDiakriet;
    return this;
  }

   /**
   * Get indicatieNietToonbareDiakriet
   * @return indicatieNietToonbareDiakriet
  **/
  @Schema(description = "")
  public Boolean isIndicatieNietToonbareDiakriet() {
    return indicatieNietToonbareDiakriet;
  }

  public void setIndicatieNietToonbareDiakriet(Boolean indicatieNietToonbareDiakriet) {
    this.indicatieNietToonbareDiakriet = indicatieNietToonbareDiakriet;
  }

  public KadasterPersoon beschikkingsbevoegdheid(Waardelijst beschikkingsbevoegdheid) {
    this.beschikkingsbevoegdheid = beschikkingsbevoegdheid;
    return this;
  }

   /**
   * Get beschikkingsbevoegdheid
   * @return beschikkingsbevoegdheid
  **/
  @Schema(description = "")
  public Waardelijst getBeschikkingsbevoegdheid() {
    return beschikkingsbevoegdheid;
  }

  public void setBeschikkingsbevoegdheid(Waardelijst beschikkingsbevoegdheid) {
    this.beschikkingsbevoegdheid = beschikkingsbevoegdheid;
  }

  public KadasterPersoon woonadres(Adres woonadres) {
    this.woonadres = woonadres;
    return this;
  }

   /**
   * Get woonadres
   * @return woonadres
  **/
  @Schema(description = "")
  public Adres getWoonadres() {
    return woonadres;
  }

  public void setWoonadres(Adres woonadres) {
    this.woonadres = woonadres;
  }

  public KadasterPersoon postadres(Postadres postadres) {
    this.postadres = postadres;
    return this;
  }

   /**
   * Get postadres
   * @return postadres
  **/
  @Schema(description = "")
  public Postadres getPostadres() {
    return postadres;
  }

  public void setPostadres(Postadres postadres) {
    this.postadres = postadres;
  }

  public KadasterPersoon kadastraalOnroerendeZaakIdentificaties(List<String> kadastraalOnroerendeZaakIdentificaties) {
    this.kadastraalOnroerendeZaakIdentificaties = kadastraalOnroerendeZaakIdentificaties;
    return this;
  }

  public KadasterPersoon addKadastraalOnroerendeZaakIdentificatiesItem(String kadastraalOnroerendeZaakIdentificatiesItem) {
    if (this.kadastraalOnroerendeZaakIdentificaties == null) {
      this.kadastraalOnroerendeZaakIdentificaties = new ArrayList<String>();
    }
    this.kadastraalOnroerendeZaakIdentificaties.add(kadastraalOnroerendeZaakIdentificatiesItem);
    return this;
  }

   /**
   * Get kadastraalOnroerendeZaakIdentificaties
   * @return kadastraalOnroerendeZaakIdentificaties
  **/
  @Schema(description = "")
  public List<String> getKadastraalOnroerendeZaakIdentificaties() {
    return kadastraalOnroerendeZaakIdentificaties;
  }

  public void setKadastraalOnroerendeZaakIdentificaties(List<String> kadastraalOnroerendeZaakIdentificaties) {
    this.kadastraalOnroerendeZaakIdentificaties = kadastraalOnroerendeZaakIdentificaties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KadasterPersoon kadasterPersoon = (KadasterPersoon) o;
    return Objects.equals(this.domein, kadasterPersoon.domein) &&
        Objects.equals(this.indicatieNietToonbareDiakriet, kadasterPersoon.indicatieNietToonbareDiakriet) &&
        Objects.equals(this.beschikkingsbevoegdheid, kadasterPersoon.beschikkingsbevoegdheid) &&
        Objects.equals(this.woonadres, kadasterPersoon.woonadres) &&
        Objects.equals(this.postadres, kadasterPersoon.postadres) &&
        Objects.equals(this.kadastraalOnroerendeZaakIdentificaties, kadasterPersoon.kadastraalOnroerendeZaakIdentificaties) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domein, indicatieNietToonbareDiakriet, beschikkingsbevoegdheid, woonadres, postadres, kadastraalOnroerendeZaakIdentificaties, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KadasterPersoon {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    domein: ").append(toIndentedString(domein)).append("\n");
    sb.append("    indicatieNietToonbareDiakriet: ").append(toIndentedString(indicatieNietToonbareDiakriet)).append("\n");
    sb.append("    beschikkingsbevoegdheid: ").append(toIndentedString(beschikkingsbevoegdheid)).append("\n");
    sb.append("    woonadres: ").append(toIndentedString(woonadres)).append("\n");
    sb.append("    postadres: ").append(toIndentedString(postadres)).append("\n");
    sb.append("    kadastraalOnroerendeZaakIdentificaties: ").append(toIndentedString(kadastraalOnroerendeZaakIdentificaties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
