/*
 * Kadastraal onroerende zaken
 * D.m.v. deze toepassing worden meerdere, korte bevragingen op de Basis Registratie Kadaster beschikbaar gesteld. Deze toepassing betreft het verstrekken van Kadastrale Onroerende Zaak informatie.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.KadastraalOnroerendeZaak;
import org.openapitools.client.model.KadastraalOnroerendeZaakEmbedded;
import org.openapitools.client.model.KadastraalOnroerendeZaakLinks;
import org.openapitools.client.model.LocatieKadastraalObject;
import org.openapitools.client.model.PointGeoJSON;
import org.openapitools.client.model.PolygonGeoJSON;
import org.openapitools.client.model.TypeKadastraalOnroerendeZaakEnum;
import org.openapitools.client.model.TypeKoopsom;
import org.openapitools.client.model.TypeOppervlak;
import org.openapitools.client.model.TypePerceelnummerVerschuiving;
import org.openapitools.client.model.Waardelijst;

/**
 * KadastraalOnroerendeZaakHal
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-07-02T17:36:04.072+02:00[Europe/Amsterdam]")
public class KadastraalOnroerendeZaakHal extends KadastraalOnroerendeZaak {
  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private KadastraalOnroerendeZaakLinks links;

  public static final String SERIALIZED_NAME_EMBEDDED = "_embedded";
  @SerializedName(SERIALIZED_NAME_EMBEDDED)
  private KadastraalOnroerendeZaakEmbedded embedded;


  public KadastraalOnroerendeZaakHal links(KadastraalOnroerendeZaakLinks links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KadastraalOnroerendeZaakLinks getLinks() {
    return links;
  }


  public void setLinks(KadastraalOnroerendeZaakLinks links) {
    this.links = links;
  }


  public KadastraalOnroerendeZaakHal embedded(KadastraalOnroerendeZaakEmbedded embedded) {
    
    this.embedded = embedded;
    return this;
  }

   /**
   * Get embedded
   * @return embedded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KadastraalOnroerendeZaakEmbedded getEmbedded() {
    return embedded;
  }


  public void setEmbedded(KadastraalOnroerendeZaakEmbedded embedded) {
    this.embedded = embedded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KadastraalOnroerendeZaakHal kadastraalOnroerendeZaakHal = (KadastraalOnroerendeZaakHal) o;
    return Objects.equals(this.links, kadastraalOnroerendeZaakHal.links) &&
        Objects.equals(this.embedded, kadastraalOnroerendeZaakHal.embedded) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, embedded, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KadastraalOnroerendeZaakHal {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    embedded: ").append(toIndentedString(embedded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

